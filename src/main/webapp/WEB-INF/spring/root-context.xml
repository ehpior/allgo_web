<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 데이터베이스 빈등록 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="java:comp/env/jdbc/mysql" />
	</bean>
	
	<!-- Mybatis 세션 팩토리 빈등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.allgo.web.dao" />
		<property name="mapperLocations" value="classpath:mybatis/*.xml" />
	</bean>
	
	<!-- Mybatis Mapper Auto Scanning 빈 등록 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.allgo.web.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
 
	<!-- sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" />
	
	<!-- redis -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
		<property name="usePool" value="true" />
		<property name="hostName" value="1.240.167.231" />
		<property name="port" value="6379" />
    	<property name="poolConfig" ref="jedisPoolConfig" />
    	<property name="password" value="wjdgusrl34" />
    </bean>
    
    <!-- redis 템플릿 설정 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	    <!-- 위에서 생성한 jedisConnectionFactory 를 꽂아줌 -->
	    <property name="connectionFactory" ref="jedisConnectionFactory" />
	    <!-- 키는 string, value 는 Object 로 설정 -->
	    <!-- keySerializer, hashKeySerializer 는 StringRedisSerializer 로 잡고 -->
	    <!-- valueSerializer, hashValueSerializer 는 GenericJackson2JsonRedisSerializer -->
	    <!-- 로 잡은후 생성자로 Object 객체를 넣어주었다. -->
	    <property name="keySerializer">
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	    </property>
	    <property name="valueSerializer">
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	    </property>
	    <!-- <property name="valueSerializer">
	        <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer">
	            <constructor-arg value="java.lang.Object" />
	        </bean>
	    </property> -->
	    <property name="hashKeySerializer">
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	    </property>
	    <property name="hashValueSerializer">
	        <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer">
	            <constructor-arg value="java.lang.Object" />
	        </bean>
	    </property>
	</bean>
    
	<!-- declare Redis Cache Manager -->
	<!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:redis-operations-ref='redisTemplate'>
        <property name="expires">
            <map>
                <entry key="sessionData" value="7200"></entry>
                <entry key="portalData" value="7200"></entry>
                <entry key="referenceData" value="86400"></entry>
            </map>
        </property>
    </bean> -->

	<!-- <bean id="workExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	    <property name="corePoolSize" value="10" />
	    <property name="maxPoolSize" value="20" />
	    <property name="queueCapacity" value="10" />
		<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean> -->
	
	<bean id="stockList" class="com.allgo.web.dto.StockList" />
	
    <context:component-scan base-package="com.allgo.web.redis" />
	<context:component-scan base-package="com.allgo.web.init" />
	<context:component-scan base-package="com.allgo.web.service" />
	
</beans>
